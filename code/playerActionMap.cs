//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/scripts/playerActionMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActionMap : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActionMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""playerActionMap"",
    ""maps"": [
        {
            ""name"": ""player"",
            ""id"": ""cf3374c5-69cb-4108-8631-057d4ea7eb88"",
            ""actions"": [
                {
                    ""name"": ""movement"",
                    ""type"": ""Value"",
                    ""id"": ""027e7a89-f793-4e34-82bb-ad2d6388f2ce"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""shooting"",
                    ""type"": ""Button"",
                    ""id"": ""2a2d5e0d-7de4-4b48-91d8-971d0c00de2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""1e18cd43-90dc-4796-b079-b24e245d8116"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""cameraMovement"",
                    ""type"": ""Value"",
                    ""id"": ""599d9233-6f8d-49b0-b6b0-fd25646528bf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1adf75c4-c7c3-4d79-b928-77524178a0b4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""149a6538-8995-4747-a8dc-1d12a9477c7a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0b5ed8b3-1746-4fea-a9e2-a5234b8434df"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""20cfe6fc-8fbc-40c7-abcf-46904b5d12be"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3bf2e4d6-06ba-4f1e-8df4-c24f8db805b0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""846a84c6-1cdb-4ea6-8afe-aa3133803602"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""417ff223-2c7a-402d-a8e2-4176402ad7cc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shooting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3ac2ee1-73d6-4467-87b7-de3979a0133d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc02fb2e-df74-4e72-acdd-ee665408c302"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""cameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""editor"",
            ""id"": ""f134716f-b574-45d5-b3f1-5ad5daef3859"",
            ""actions"": [
                {
                    ""name"": ""addItem1"",
                    ""type"": ""Button"",
                    ""id"": ""5df5c0ca-9b62-4793-b19b-bc4f9ef30ac5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""addItem2"",
                    ""type"": ""Button"",
                    ""id"": ""92345a42-fbdd-40a3-b12d-40816a0e0f2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""dropitem"",
                    ""type"": ""Button"",
                    ""id"": ""4a575439-d072-4a0c-8037-297a1bd709d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""enableEditor"",
                    ""type"": ""Button"",
                    ""id"": ""a1d83779-00d8-4b82-b355-f8fbd0ac7fb4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""975019ca-df7f-4848-a504-02a318e557f9"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""addItem1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3c41c47-1c52-4344-a54d-a9f9978ef501"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""addItem2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be1272d2-1f1d-4003-b67c-d40d391be64e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""dropitem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f782bf6-7d86-450a-a260-f8dbda19e73c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enableEditor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // player
        m_player = asset.FindActionMap("player", throwIfNotFound: true);
        m_player_movement = m_player.FindAction("movement", throwIfNotFound: true);
        m_player_shooting = m_player.FindAction("shooting", throwIfNotFound: true);
        m_player_jump = m_player.FindAction("jump", throwIfNotFound: true);
        m_player_cameraMovement = m_player.FindAction("cameraMovement", throwIfNotFound: true);
        // editor
        m_editor = asset.FindActionMap("editor", throwIfNotFound: true);
        m_editor_addItem1 = m_editor.FindAction("addItem1", throwIfNotFound: true);
        m_editor_addItem2 = m_editor.FindAction("addItem2", throwIfNotFound: true);
        m_editor_dropitem = m_editor.FindAction("dropitem", throwIfNotFound: true);
        m_editor_enableEditor = m_editor.FindAction("enableEditor", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // player
    private readonly InputActionMap m_player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_player_movement;
    private readonly InputAction m_player_shooting;
    private readonly InputAction m_player_jump;
    private readonly InputAction m_player_cameraMovement;
    public struct PlayerActions
    {
        private @PlayerActionMap m_Wrapper;
        public PlayerActions(@PlayerActionMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @movement => m_Wrapper.m_player_movement;
        public InputAction @shooting => m_Wrapper.m_player_shooting;
        public InputAction @jump => m_Wrapper.m_player_jump;
        public InputAction @cameraMovement => m_Wrapper.m_player_cameraMovement;
        public InputActionMap Get() { return m_Wrapper.m_player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @shooting.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShooting;
                @shooting.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShooting;
                @shooting.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShooting;
                @jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @cameraMovement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCameraMovement;
                @cameraMovement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCameraMovement;
                @cameraMovement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCameraMovement;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @movement.started += instance.OnMovement;
                @movement.performed += instance.OnMovement;
                @movement.canceled += instance.OnMovement;
                @shooting.started += instance.OnShooting;
                @shooting.performed += instance.OnShooting;
                @shooting.canceled += instance.OnShooting;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @cameraMovement.started += instance.OnCameraMovement;
                @cameraMovement.performed += instance.OnCameraMovement;
                @cameraMovement.canceled += instance.OnCameraMovement;
            }
        }
    }
    public PlayerActions @player => new PlayerActions(this);

    // editor
    private readonly InputActionMap m_editor;
    private IEditorActions m_EditorActionsCallbackInterface;
    private readonly InputAction m_editor_addItem1;
    private readonly InputAction m_editor_addItem2;
    private readonly InputAction m_editor_dropitem;
    private readonly InputAction m_editor_enableEditor;
    public struct EditorActions
    {
        private @PlayerActionMap m_Wrapper;
        public EditorActions(@PlayerActionMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @addItem1 => m_Wrapper.m_editor_addItem1;
        public InputAction @addItem2 => m_Wrapper.m_editor_addItem2;
        public InputAction @dropitem => m_Wrapper.m_editor_dropitem;
        public InputAction @enableEditor => m_Wrapper.m_editor_enableEditor;
        public InputActionMap Get() { return m_Wrapper.m_editor; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EditorActions set) { return set.Get(); }
        public void SetCallbacks(IEditorActions instance)
        {
            if (m_Wrapper.m_EditorActionsCallbackInterface != null)
            {
                @addItem1.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnAddItem1;
                @addItem1.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnAddItem1;
                @addItem1.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnAddItem1;
                @addItem2.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnAddItem2;
                @addItem2.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnAddItem2;
                @addItem2.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnAddItem2;
                @dropitem.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnDropitem;
                @dropitem.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnDropitem;
                @dropitem.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnDropitem;
                @enableEditor.started -= m_Wrapper.m_EditorActionsCallbackInterface.OnEnableEditor;
                @enableEditor.performed -= m_Wrapper.m_EditorActionsCallbackInterface.OnEnableEditor;
                @enableEditor.canceled -= m_Wrapper.m_EditorActionsCallbackInterface.OnEnableEditor;
            }
            m_Wrapper.m_EditorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @addItem1.started += instance.OnAddItem1;
                @addItem1.performed += instance.OnAddItem1;
                @addItem1.canceled += instance.OnAddItem1;
                @addItem2.started += instance.OnAddItem2;
                @addItem2.performed += instance.OnAddItem2;
                @addItem2.canceled += instance.OnAddItem2;
                @dropitem.started += instance.OnDropitem;
                @dropitem.performed += instance.OnDropitem;
                @dropitem.canceled += instance.OnDropitem;
                @enableEditor.started += instance.OnEnableEditor;
                @enableEditor.performed += instance.OnEnableEditor;
                @enableEditor.canceled += instance.OnEnableEditor;
            }
        }
    }
    public EditorActions @editor => new EditorActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShooting(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCameraMovement(InputAction.CallbackContext context);
    }
    public interface IEditorActions
    {
        void OnAddItem1(InputAction.CallbackContext context);
        void OnAddItem2(InputAction.CallbackContext context);
        void OnDropitem(InputAction.CallbackContext context);
        void OnEnableEditor(InputAction.CallbackContext context);
    }
}
